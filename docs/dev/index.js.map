{"version":3,"file":"index.js","sources":["../../vite/modulepreload-polyfill","../../src/settingsGui.ts","../../src/assets/logo.png","../../src/vimReact.tsx","../../src/vimWebApp.ts"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","/**\r\n @author VIM / https://vimaec.com\r\n*/\r\n\r\n/* eslint-disable no-unused-vars */\r\nimport { GUI } from 'dat.gui'\r\n\r\n// Used to provide new IDs for each new property descriptor that is created.\r\nlet gid = 0\r\n\r\n/**\r\n * Describes a property so that it can be found\r\n */\r\nclass PropDesc {\r\n  id = gid++\r\n  name = ''\r\n  vis = true\r\n  min?: number\r\n  max?: number\r\n  step?: number\r\n  choices!: string[]\r\n  options: any\r\n  def: any\r\n  type: string\r\n\r\n  constructor (type: string, def: any) {\r\n    this.type = type\r\n    this.def = def\r\n  }\r\n\r\n  setStep (step: number): PropDesc {\r\n    this.step = step\r\n    return this\r\n  }\r\n\r\n  setRange (min: number, max?: number): PropDesc {\r\n    this.min = min\r\n    this.max = max\r\n    return this\r\n  }\r\n\r\n  setName (name: string): PropDesc {\r\n    this.name = name\r\n    return this\r\n  }\r\n\r\n  setChoices (xs: string[]): PropDesc {\r\n    this.choices = xs\r\n    return this\r\n  }\r\n\r\n  setOptions (xs: any): PropDesc {\r\n    this.options = xs\r\n    return this\r\n  }\r\n}\r\n\r\n/**\r\n * An object that maps names to property descriptors or other maps. Allows property descriptors to be easily\r\n * written as hierarchical data structures that map the folder structurue we want in the GUI.\r\n */\r\ninterface IPropDescMap {\r\n  [name: string]: PropDesc | IPropDescMap\r\n}\r\n\r\n/**\r\n * Holds a value, and a reference to the descriptor.\r\n */\r\nclass PropValue {\r\n  _value: any\r\n  constructor (public _desc: PropDesc) {\r\n    this._value = _desc.def\r\n  }\r\n\r\n  get name (): string {\r\n    return this._desc.name\r\n  }\r\n\r\n  get value (): any {\r\n    return this._value\r\n  }\r\n\r\n  set value (value: any) {\r\n    this._value = value\r\n  }\r\n}\r\n\r\n/**\r\n * Represent name value pairs\r\n */\r\ninterface PropListJson {\r\n  [name: string]: any\r\n}\r\n\r\n/**\r\n * A list of properties. The values can be get and set directly on this object.\r\n */\r\nclass PropList {\r\n  readonly items: (PropValue | PropList)[] = []\r\n  constructor (\r\n    public readonly desc: IPropDescMap,\r\n    public readonly name: string = ''\r\n  ) {\r\n    for (const k in desc) {\r\n      const v = desc[k]\r\n      if (v instanceof PropDesc) this.items.push(new PropValue(v))\r\n      else this.items.push(new PropList(v, k))\r\n    }\r\n  }\r\n\r\n  fromJson (json: PropListJson) {\r\n    for (const pv of this.items) {\r\n      if (pv.name in json) {\r\n        const v = json[pv.name]\r\n        if (pv instanceof PropValue) pv.value = v\r\n        else pv.fromJson(v)\r\n      }\r\n    }\r\n    return this\r\n  }\r\n\r\n  get toJson (): PropListJson {\r\n    const r = {} as Record<string, unknown>\r\n    for (const pv of this.items) {\r\n      if (pv instanceof PropValue) {\r\n        r[pv.name] = pv.value\r\n      } else {\r\n        r[pv.name] = pv.toJson\r\n      }\r\n    }\r\n    return r\r\n  }\r\n\r\n  find (name: string): PropValue | PropList | undefined {\r\n    return this.items.find((v) => v.name === name)\r\n  }\r\n}\r\n\r\n// Used for callbacks when a property value is changed.\r\ntype PropValueChanged = (pv: PropValue) => void\r\ntype PropsValueChanged = (pv: PropListJson) => void\r\n\r\nexport const settingsGui = {\r\n  gui: new GUI(),\r\n  bind: function (\r\n    settings: Record<string, unknown>,\r\n    callback: PropsValueChanged\r\n  ) {\r\n    // Create a property descriptor\r\n    const propDesc = objectToPropDesc(settings, {})\r\n\r\n    // Create a property list from the descriptor\r\n    const props = new PropList(propDesc)\r\n    // Iniitlaize the property list values\r\n    props.fromJson(settings)\r\n\r\n    // Bind the properties to the DAT.gui controller, returning the scene when it updates\r\n    bindControls(props, this.gui, () => callback(props.toJson))\r\n\r\n    function objectToPropDesc (\r\n      obj: Record<string, unknown>,\r\n      pdm: IPropDescMap\r\n    ): IPropDescMap {\r\n      // TODO: look for common patterns (colors, positions, angles) and process these specially.\r\n      for (const k in obj) {\r\n        const v = obj[k]\r\n        switch (typeof v) {\r\n          case 'number':\r\n            pdm[k] = floatProp(v).setName(k)\r\n            break\r\n          case 'string':\r\n            pdm[k] = stringProp(v).setName(k)\r\n            break\r\n          case 'boolean':\r\n            pdm[k] = boolProp(v).setName(k)\r\n            break\r\n          case 'object':\r\n            pdm[k] = objectToPropDesc(v as Record<string, unknown>, {})\r\n            break\r\n        }\r\n      }\r\n      return pdm\r\n    }\r\n\r\n    // Fills out a dat.gui instance to a property list.\r\n    function bindControls (\r\n      list: PropList,\r\n      gui: any,\r\n      onChange: PropValueChanged\r\n    ) {\r\n      for (const k in list.desc) {\r\n        bindControl(list, k, gui, onChange)\r\n      }\r\n      return gui\r\n    }\r\n\r\n    // Fills out a dat.gui control to a property in a property list.\r\n    function bindControl (\r\n      list: PropList,\r\n      name: string,\r\n      gui: any,\r\n      onChange: PropValueChanged\r\n    ) {\r\n      const pv = list.find(name)\r\n      if (!pv) throw new Error('Could not find parameter ' + name)\r\n      // Do I really need to pass a PropDesc??\r\n      if (pv instanceof PropValue) {\r\n        const desc = pv._desc\r\n        if (desc.choices) {\r\n          return gui\r\n            .add(pv, 'value', desc.choices)\r\n            .name(pv.name)\r\n            .setValue(pv.value)\r\n            .onChange(() => onChange(pv))\r\n        } else if (desc.type === 'vec3') {\r\n          const folder = gui.addFolder(desc.name)\r\n          folder.open()\r\n          folder\r\n            .add(pv.value, 'x')\r\n            .step(0.1)\r\n            .onChange(() => onChange(pv))\r\n          folder\r\n            .add(pv.value, 'y')\r\n            .step(0.1)\r\n            .onChange(() => onChange(pv))\r\n          folder\r\n            .add(pv.value, 'z')\r\n            .step(0.1)\r\n            .onChange(() => onChange(pv))\r\n          return folder\r\n        } else if (desc.type === 'hsv') {\r\n          const folder = gui.addFolder(desc.name)\r\n          folder.open()\r\n          folder\r\n            .add(pv.value, 'x')\r\n            .name('hue')\r\n            .step(0.1)\r\n            .onChange(() => onChange(pv))\r\n          folder\r\n            .add(pv.value, 'y')\r\n            .name('saturation')\r\n            .step(0.1)\r\n            .onChange(() => onChange(pv))\r\n          folder\r\n            .add(pv.value, 'z')\r\n            .name('value')\r\n            .step(0.1)\r\n            .onChange(() => onChange(pv))\r\n          return folder\r\n        } else if (desc.type === 'rot') {\r\n          const folder = gui.addFolder(desc.name)\r\n          folder.open()\r\n          folder.add(pv.value, 'yaw', -1, 1, 0.01).onChange(() => onChange(pv))\r\n          folder\r\n            .add(pv.value, 'pitch', -1, 1, 0.01)\r\n            .onChange(() => onChange(pv))\r\n          folder.add(pv.value, 'roll', -1, 1, 0.01).onChange(() => onChange(pv))\r\n          return folder\r\n        } else if (desc.type === 'color') {\r\n          const controller = gui.addColor(pv, 'value').name(pv.name)\r\n          controller.onChange(() => onChange(pv))\r\n          return controller\r\n        } else {\r\n          const controller = gui\r\n            .add(pv, 'value', desc.min, desc.max, desc.step)\r\n            .name(pv.name)\r\n          controller.onChange(() => onChange(pv))\r\n          return controller\r\n        }\r\n      } else {\r\n        // It is a property list. We create a new folder, and add controls to the folder.\r\n        const folder = gui.addFolder(name)\r\n        // folder.open();\r\n        bindControls(pv, folder, onChange)\r\n        return folder\r\n      }\r\n    }\r\n\r\n    // Helper functions for defining properties\r\n    function prop (type: string, def: any): PropDesc {\r\n      return new PropDesc(type, def)\r\n    }\r\n    function boolProp (x: boolean) {\r\n      return prop('boolean', x)\r\n    }\r\n    function stringProp (x: string) {\r\n      return prop('string', x)\r\n    }\r\n    function floatProp (x: number = 0) {\r\n      return prop('float', x)\r\n    }\r\n    function smallFloatProp (x: number = 0) {\r\n      return prop('float', x).setStep(0.01)\r\n    }\r\n    function colorCompProp (x: number = 0) {\r\n      return rangedIntProp(x, 0, 255)\r\n    }\r\n    function intProp (x: number) {\r\n      return prop('int', x)\r\n    }\r\n    function rangedIntProp (x: number, min: number, max: number) {\r\n      return intProp(x).setRange(min, max)\r\n    }\r\n    function rangedFloatProp (x: number, min: number, max: number) {\r\n      return floatProp(x).setRange(min, max)\r\n    }\r\n    function zeroToOneProp (x: number) {\r\n      return floatProp(x).setRange(0, 1).setStep(0.01)\r\n    }\r\n    function oneOrMoreIntProp (x: number) {\r\n      return intProp(x).setRange(1)\r\n    }\r\n    function timeProp (x: number) {\r\n      return prop('time', x)\r\n    }\r\n    function choiceProp (xs: string[]) {\r\n      return prop('choices', xs[0]).setChoices(xs)\r\n    }\r\n    function vec3Prop (x = 0, y = 0, z = 0) {\r\n      return prop('vec3', { x, y, z })\r\n    }\r\n    function scaleProp () {\r\n      return prop('vec3', { x: 1, y: 1, z: 1 })\r\n    }\r\n    function rotProp (yaw = 0, pitch = 0, roll = 0) {\r\n      return prop('rot', { yaw, pitch, roll })\r\n    }\r\n    function axisProp () {\r\n      return choiceProp(['x', 'y', 'z']).setName('axis')\r\n    }\r\n    function conditionalProp (val: string, options: any) {\r\n      return prop('conditional', val).setOptions(options)\r\n    }\r\n    function colorProp (r = 0, g = 0, b = 0) {\r\n      return prop('color', [r, g, b])\r\n    }\r\n  }\r\n}\r\n","export default \"__VITE_ASSET__93547066__\"","// eslint-disable-next-line no-use-before-define\r\nimport React, { useState } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport urlLogo from './assets/logo.png'\r\nimport { ViewerState } from '../VimWebViewer/viewer'\r\nimport './style.css'\r\n\r\nconst canvasId = 'vim-canvas'\r\n\r\nexport function buildUI (viewerEventName: string): string {\r\n  // Create container for React\r\n  const ui = document.createElement('div')\r\n  ui.className = 'vim'\r\n  document.body.append(ui)\r\n\r\n  // Render\r\n  ReactDOM.render(<VimUI eventName={viewerEventName} />, ui)\r\n  return canvasId\r\n}\r\n\r\nfunction VimUI (props: { eventName: string }) {\r\n  const [msg, setProgress] = useState('')\r\n\r\n  addEventListener(props.eventName, (event: CustomEvent<ViewerState>) => {\r\n    setProgress(FormatStateMessage(event.detail))\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <canvas id={canvasId}> </canvas>\r\n      <Logo />\r\n      <VimLoadingBox msg={msg} />\r\n    </>\r\n  )\r\n}\r\n\r\nfunction Logo () {\r\n  return (\r\n    <div className=\"vim-logo\">\r\n      <a href=\"https://vimaec.com\">\r\n        <img src={urlLogo}></img>\r\n      </a>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction FormatStateMessage (state: ViewerState): string {\r\n  return state === 'Default'\r\n    ? ''\r\n    : state === 'Processing'\r\n      ? 'Processing'\r\n      : `Downloading: ${Math.round(state[1] / 1000000)} MB`\r\n}\r\n\r\nfunction VimLoadingBox (prop: { msg: string }) {\r\n  if (prop.msg === '') return null\r\n  return (\r\n    <div className=\"vim-loading-box\">\r\n      <h1> {prop.msg} </h1>\r\n    </div>\r\n  )\r\n}\r\n","import { settingsGui } from './settingsGui'\r\nimport { buildUI } from './vimReact'\r\nimport {Viewer} from 'vim-webgl-viewer'\r\nimport Stats from 'stats-js'\r\n\r\n// Parse URL\r\nconst params = new URLSearchParams(window.location.search)\r\nconst url = params.has('model')\r\n  ? params.get('model')\r\n  : 'https://vim.azureedge.net/samples/residence.vim'\r\n\r\nconst canvasId = buildUI(Viewer.stateChangeEventName)\r\n\r\nconst viewer = new Viewer({\r\n  mouseOrbit: false,\r\n  canvasId: canvasId,\r\n  url: url,\r\n  object: {\r\n    scale: 0.1,\r\n    rotation: { x: 270 },\r\n    position: { y: 0 }\r\n  },\r\n  plane: {\r\n    show: false\r\n  },\r\n  showStats: true\r\n})\r\n\r\n// Make viewer accessible in console\r\nglobalThis.viewer = viewer\r\n\r\n// Add a new DAT.gui controller\r\nif (viewer.settings.showGui) {\r\n  settingsGui.bind(viewer.settings, (settings) => {\r\n    viewer.settings = settings\r\n    viewer.ApplySettings()\r\n  })\r\n}\r\n\r\n// Add Stats display\r\nlet stats\r\nif (viewer.settings.showStats) {\r\n  stats = new Stats()\r\n  stats.dom.style.top = '84px'\r\n  stats.dom.style.left = '16px'\r\n  document.body.appendChild(stats.dom)\r\n  animate()\r\n}\r\n\r\nfunction animate () {\r\n  requestAnimationFrame(() => animate())\r\n\r\n  if (stats) {\r\n    stats.update()\r\n  }\r\n}\r\n\r\n\r\n\r\n"],"names":["GUI","canvasId","useState"],"mappings":"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"}